(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{453:function(t,a,e){"use strict";e.r(a);var s=e(33),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"}},[t._v("centos"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ubuntu"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),e("ol",[e("li",[t._v("docker images 镜像列表")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("docker images "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#镜像列表")]),t._v("\n-a "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列出本地所有的镜像（含中间映像层）")]),t._v("\n-q "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只显示镜像ID。")]),t._v("\n--digests "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示镜像的摘要信息")]),t._v("\n--no-trunc "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示完整的镜像信息")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("docker search xx 搜索镜像")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("docker search tomcat "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 搜索tomcat镜像")]),t._v("\n----filter "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("stars")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("num\ndocker search --filter "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("stars")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" tomcat "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 搜索start>30的tomcat镜像")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[t._v("docker pull image [:TAG]")])]),t._v(" "),e("li",[e("p",[t._v("docker rmi  imageID 删除镜像")])])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("docker rmi -f "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("docker images -qa"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除全部镜像")]),t._v("\n")])])]),e("h2",{attrs:{id:"dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[t._v("#")]),t._v(" Dockerfile")]),t._v(" "),e("p",[t._v("Dockerfile是用来构建Docker镜像的构建文件，是由一系列命令和参数构成的脚本。")]),t._v(" "),e("h3",{attrs:{id:"构建步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建步骤"}},[t._v("#")]),t._v(" 构建步骤")]),t._v(" "),e("ul",[e("li",[t._v("编写Dockerfile文件")]),t._v(" "),e("li",[t._v("docker build [-f DockerfilePath] -t imageName:tag .")])]),t._v(" "),e("h3",{attrs:{id:"关键字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[t._v("#")]),t._v(" 关键字")]),t._v(" "),e("ul",[e("li",[t._v("FROM  基础镜像，当前新镜像是基于哪个镜像的")]),t._v(" "),e("li",[t._v("MAINTAINER   镜像维护者的姓名和邮箱地址")]),t._v(" "),e("li",[t._v("RUN   容器构建时需要运行的命令")]),t._v(" "),e("li",[t._v("EXPOSE   当前容器对外暴露出的端口")]),t._v(" "),e("li",[t._v("WORKDIR   指定在创建容器后，终端默认登陆的进来工作目录，一个落脚点")]),t._v(" "),e("li",[t._v("ENV   用来在构建镜像过程中设置环境变量")]),t._v(" "),e("li",[t._v("ADD   将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar压缩包")]),t._v(" "),e("li",[t._v("COPY   将从构建上下文目录中 <源路径> 的文件/目录复制到新的一层的镜像内的 <目标路径> 位置")]),t._v(" "),e("li",[t._v("VOLUME   容器数据卷，用于数据保存和持久化工作")]),t._v(" "),e("li",[t._v("CMD   指定一个容器启动时要运行的命令 Dockerfile 中可以有多个 CMD 指令，但只有最后一个生效，CMD 会被 docker run 之后的参数替换")]),t._v(" "),e("li",[t._v("ENTRYPOINT​ 指定一个容器启动时要运行的命令 ENTRYPOINT 的目的和CMD一样，都是在指定容器启动程序及参数")]),t._v(" "),e("li",[t._v("ONBUILD 当构建一个被继承的Dockerfile时运行命令，父镜像在被子继承后父镜像的onbuild被触发")])]),t._v(" "),e("h2",{attrs:{id:"网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),e("h3",{attrs:{id:"docker容器互访"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker容器互访"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.cnblogs.com/shenh/p/9714547.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker容器互访"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);